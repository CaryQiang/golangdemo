// Code generated by protoc-gen-go. DO NOT EDIT.
// source: target.proto

/*
Package target is a generated protocol buffer package.

It is generated from these files:
	target.proto

It has these top-level messages:
	TargetLib
	Target
	TargetAddRequest
	TargetAddResponse
	TargetDelRequest
	TargetDelResponse
	TargetLibListRequest
	TargetLibListResponse
*/
package target

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "golangdemo/masterWorkerDemo/pb/google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 目标库信息
type TargetLib struct {
	LibId       string `protobuf:"bytes,1,opt,name=lib_id,json=libId" json:"lib_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type        int32  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	TargetCount int32  `protobuf:"varint,4,opt,name=target_count,json=targetCount" json:"target_count,omitempty"`
}

func (m *TargetLib) Reset()                    { *m = TargetLib{} }
func (m *TargetLib) String() string            { return proto.CompactTextString(m) }
func (*TargetLib) ProtoMessage()               {}
func (*TargetLib) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TargetLib) GetLibId() string {
	if m != nil {
		return m.LibId
	}
	return ""
}

func (m *TargetLib) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetLib) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TargetLib) GetTargetCount() int32 {
	if m != nil {
		return m.TargetCount
	}
	return 0
}

// 目标信息
type Target struct {
	TargetId string `protobuf:"bytes,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Gender   int32  `protobuf:"varint,3,opt,name=gender" json:"gender,omitempty"`
	Age      int32  `protobuf:"varint,4,opt,name=age" json:"age,omitempty"`
	Address  string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	IdNumber string `protobuf:"bytes,6,opt,name=id_number,json=idNumber" json:"id_number,omitempty"`
	Nation   string `protobuf:"bytes,7,opt,name=nation" json:"nation,omitempty"`
	ImgUrl   string `protobuf:"bytes,8,opt,name=img_url,json=imgUrl" json:"img_url,omitempty"`
}

func (m *Target) Reset()                    { *m = Target{} }
func (m *Target) String() string            { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()               {}
func (*Target) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Target) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *Target) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Target) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *Target) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Target) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Target) GetIdNumber() string {
	if m != nil {
		return m.IdNumber
	}
	return ""
}

func (m *Target) GetNation() string {
	if m != nil {
		return m.Nation
	}
	return ""
}

func (m *Target) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

// 添加目标请求
type TargetAddRequest struct {
	Target *Target `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
}

func (m *TargetAddRequest) Reset()                    { *m = TargetAddRequest{} }
func (m *TargetAddRequest) String() string            { return proto.CompactTextString(m) }
func (*TargetAddRequest) ProtoMessage()               {}
func (*TargetAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TargetAddRequest) GetTarget() *Target {
	if m != nil {
		return m.Target
	}
	return nil
}

// 添加目标响应
type TargetAddResponse struct {
	TargetId string `protobuf:"bytes,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
}

func (m *TargetAddResponse) Reset()                    { *m = TargetAddResponse{} }
func (m *TargetAddResponse) String() string            { return proto.CompactTextString(m) }
func (*TargetAddResponse) ProtoMessage()               {}
func (*TargetAddResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TargetAddResponse) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

// 删除目标请求
type TargetDelRequest struct {
	TargetId string `protobuf:"bytes,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
}

func (m *TargetDelRequest) Reset()                    { *m = TargetDelRequest{} }
func (m *TargetDelRequest) String() string            { return proto.CompactTextString(m) }
func (*TargetDelRequest) ProtoMessage()               {}
func (*TargetDelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TargetDelRequest) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

// 删除目标响应
type TargetDelResponse struct {
}

func (m *TargetDelResponse) Reset()                    { *m = TargetDelResponse{} }
func (m *TargetDelResponse) String() string            { return proto.CompactTextString(m) }
func (*TargetDelResponse) ProtoMessage()               {}
func (*TargetDelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

// 查询目标库列表请求
type TargetLibListRequest struct {
}

func (m *TargetLibListRequest) Reset()                    { *m = TargetLibListRequest{} }
func (m *TargetLibListRequest) String() string            { return proto.CompactTextString(m) }
func (*TargetLibListRequest) ProtoMessage()               {}
func (*TargetLibListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// 查询目标库列表响应
type TargetLibListResponse struct {
	Libs []*TargetLib `protobuf:"bytes,1,rep,name=libs" json:"libs,omitempty"`
}

func (m *TargetLibListResponse) Reset()                    { *m = TargetLibListResponse{} }
func (m *TargetLibListResponse) String() string            { return proto.CompactTextString(m) }
func (*TargetLibListResponse) ProtoMessage()               {}
func (*TargetLibListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *TargetLibListResponse) GetLibs() []*TargetLib {
	if m != nil {
		return m.Libs
	}
	return nil
}

func init() {
	proto.RegisterType((*TargetLib)(nil), "TargetLib")
	proto.RegisterType((*Target)(nil), "Target")
	proto.RegisterType((*TargetAddRequest)(nil), "TargetAddRequest")
	proto.RegisterType((*TargetAddResponse)(nil), "TargetAddResponse")
	proto.RegisterType((*TargetDelRequest)(nil), "TargetDelRequest")
	proto.RegisterType((*TargetDelResponse)(nil), "TargetDelResponse")
	proto.RegisterType((*TargetLibListRequest)(nil), "TargetLibListRequest")
	proto.RegisterType((*TargetLibListResponse)(nil), "TargetLibListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TargetService service

type TargetServiceClient interface {
	// 查询目标库
	TargetLibList(ctx context.Context, in *TargetLibListRequest, opts ...grpc.CallOption) (*TargetLibListResponse, error)
	// 添加目标
	TargetAdd(ctx context.Context, in *TargetAddRequest, opts ...grpc.CallOption) (*TargetAddResponse, error)
	// 删除目标
	TargetDelete(ctx context.Context, in *TargetDelRequest, opts ...grpc.CallOption) (*TargetDelResponse, error)
}

type targetServiceClient struct {
	cc *grpc.ClientConn
}

func NewTargetServiceClient(cc *grpc.ClientConn) TargetServiceClient {
	return &targetServiceClient{cc}
}

func (c *targetServiceClient) TargetLibList(ctx context.Context, in *TargetLibListRequest, opts ...grpc.CallOption) (*TargetLibListResponse, error) {
	out := new(TargetLibListResponse)
	err := grpc.Invoke(ctx, "/TargetService/TargetLibList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetServiceClient) TargetAdd(ctx context.Context, in *TargetAddRequest, opts ...grpc.CallOption) (*TargetAddResponse, error) {
	out := new(TargetAddResponse)
	err := grpc.Invoke(ctx, "/TargetService/TargetAdd", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetServiceClient) TargetDelete(ctx context.Context, in *TargetDelRequest, opts ...grpc.CallOption) (*TargetDelResponse, error) {
	out := new(TargetDelResponse)
	err := grpc.Invoke(ctx, "/TargetService/TargetDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TargetService service

type TargetServiceServer interface {
	// 查询目标库
	TargetLibList(context.Context, *TargetLibListRequest) (*TargetLibListResponse, error)
	// 添加目标
	TargetAdd(context.Context, *TargetAddRequest) (*TargetAddResponse, error)
	// 删除目标
	TargetDelete(context.Context, *TargetDelRequest) (*TargetDelResponse, error)
}

func RegisterTargetServiceServer(s *grpc.Server, srv TargetServiceServer) {
	s.RegisterService(&_TargetService_serviceDesc, srv)
}

func _TargetService_TargetLibList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TargetLibListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetServiceServer).TargetLibList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TargetService/TargetLibList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetServiceServer).TargetLibList(ctx, req.(*TargetLibListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TargetService_TargetAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TargetAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetServiceServer).TargetAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TargetService/TargetAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetServiceServer).TargetAdd(ctx, req.(*TargetAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TargetService_TargetDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TargetDelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetServiceServer).TargetDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TargetService/TargetDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetServiceServer).TargetDelete(ctx, req.(*TargetDelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TargetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TargetService",
	HandlerType: (*TargetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TargetLibList",
			Handler:    _TargetService_TargetLibList_Handler,
		},
		{
			MethodName: "TargetAdd",
			Handler:    _TargetService_TargetAdd_Handler,
		},
		{
			MethodName: "TargetDelete",
			Handler:    _TargetService_TargetDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "target.proto",
}

func init() { proto.RegisterFile("target.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0xfc, 0x71, 0x92, 0x49, 0x8a, 0xda, 0x6d, 0x12, 0x56, 0xa1, 0x82, 0xb0, 0xa7,
	0xa8, 0x07, 0x1b, 0xa5, 0x07, 0x24, 0x6e, 0x15, 0x48, 0x08, 0xa9, 0xe2, 0xe0, 0x96, 0x73, 0x64,
	0x77, 0x47, 0xd6, 0x4a, 0xf6, 0x3a, 0x78, 0xd7, 0x48, 0x08, 0x71, 0x81, 0x47, 0xe0, 0xb1, 0x38,
	0xf2, 0x0a, 0x3c, 0x08, 0xf2, 0xfe, 0x31, 0x55, 0x29, 0xb9, 0xed, 0x7c, 0x33, 0xfb, 0xfd, 0x3c,
	0x9f, 0x6d, 0x98, 0xe9, 0xb4, 0xce, 0x51, 0x47, 0xfb, 0xba, 0xd2, 0xd5, 0xea, 0x2c, 0xaf, 0xaa,
	0xbc, 0xc0, 0x38, 0xdd, 0x8b, 0x38, 0x95, 0xb2, 0xd2, 0xa9, 0x16, 0x95, 0x54, 0xb6, 0xcb, 0x4a,
	0x98, 0xdc, 0x98, 0xe9, 0x2b, 0x91, 0x91, 0x05, 0x84, 0x85, 0xc8, 0x76, 0x82, 0xd3, 0x60, 0x1d,
	0x6c, 0x26, 0xc9, 0xb0, 0x10, 0xd9, 0x3b, 0x4e, 0x08, 0x0c, 0x64, 0x5a, 0x22, 0xed, 0x19, 0xd1,
	0x9c, 0x5b, 0x4d, 0x7f, 0xde, 0x23, 0xed, 0xaf, 0x83, 0xcd, 0x30, 0x31, 0x67, 0xf2, 0xdc, 0x93,
	0x77, 0xb7, 0x55, 0x23, 0x35, 0x1d, 0x98, 0xde, 0xd4, 0x6a, 0xaf, 0x5b, 0x89, 0xfd, 0x0c, 0x20,
	0xb4, 0x3c, 0xf2, 0x04, 0x26, 0x6e, 0xba, 0xe3, 0x8d, 0xad, 0xf0, 0x1f, 0xe4, 0x12, 0xc2, 0x1c,
	0x25, 0xc7, 0xda, 0x41, 0x5d, 0x45, 0x8e, 0xa1, 0x9f, 0xe6, 0xe8, 0x68, 0xed, 0x91, 0x50, 0x18,
	0xa5, 0x9c, 0xd7, 0xa8, 0x14, 0x1d, 0x1a, 0x03, 0x5f, 0xb6, 0x50, 0xc1, 0x77, 0xb2, 0x29, 0x33,
	0xac, 0x69, 0x68, 0xa1, 0x82, 0xbf, 0x37, 0x75, 0x0b, 0x90, 0x26, 0x1c, 0x3a, 0x32, 0x1d, 0x57,
	0x91, 0xc7, 0x30, 0x12, 0x65, 0xbe, 0x6b, 0xea, 0x82, 0x8e, 0x6d, 0x43, 0x94, 0xf9, 0x87, 0xba,
	0x60, 0x17, 0x70, 0x6c, 0x97, 0xb9, 0xe4, 0x3c, 0xc1, 0x8f, 0x0d, 0x2a, 0x4d, 0x9e, 0x41, 0x68,
	0xb7, 0x30, 0x3b, 0x4d, 0xb7, 0xa3, 0xc8, 0x8e, 0x24, 0x4e, 0x66, 0x2f, 0xe0, 0xe4, 0xce, 0x25,
	0xb5, 0xaf, 0xa4, 0xc2, 0x83, 0x61, 0xb0, 0xd8, 0x63, 0xde, 0x60, 0xe1, 0x31, 0x07, 0x2f, 0x9c,
	0x7a, 0x84, 0xb9, 0x60, 0x11, 0x6c, 0x09, 0xf3, 0xee, 0x4d, 0x5f, 0x09, 0xa5, 0x9d, 0x13, 0x7b,
	0x09, 0x8b, 0x7b, 0xba, 0x7b, 0xa6, 0xa7, 0x30, 0x28, 0x44, 0xa6, 0x68, 0xb0, 0xee, 0x6f, 0xa6,
	0x5b, 0x88, 0xba, 0xa9, 0xc4, 0xe8, 0xdb, 0xef, 0x3d, 0x38, 0xb2, 0xda, 0x35, 0xd6, 0x9f, 0xc4,
	0x2d, 0x92, 0x1b, 0x2f, 0x38, 0x2b, 0xb2, 0x88, 0x1e, 0x42, 0xae, 0x96, 0xd1, 0x83, 0x44, 0x36,
	0xff, 0xf6, 0xeb, 0xf7, 0x8f, 0xde, 0x23, 0x32, 0x8b, 0xdd, 0x6e, 0x2d, 0x87, 0xbc, 0xf5, 0x9f,
	0xe8, 0x25, 0xe7, 0xe4, 0x24, 0xba, 0x9f, 0xf8, 0x8a, 0x44, 0xff, 0xe4, 0xc9, 0x4e, 0x8d, 0xd3,
	0x11, 0x1b, 0x3b, 0x27, 0xf5, 0x2a, 0x38, 0x27, 0xd7, 0x30, 0xeb, 0x62, 0x41, 0x8d, 0x9d, 0xd7,
	0xdf, 0x58, 0x3b, 0xaf, 0xbb, 0xc1, 0x9d, 0x19, 0xaf, 0xe5, 0xf9, 0xdc, 0x7b, 0xc5, 0x5f, 0xba,
	0xe8, 0xbf, 0x66, 0xa1, 0xf9, 0x8f, 0x2e, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xee, 0xdc,
	0x44, 0x75, 0x03, 0x00, 0x00,
}
